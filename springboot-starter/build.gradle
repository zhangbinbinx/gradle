
/*buildscript {
    ext {
        springIOVersion = '1.0.0.RELEASE'
        springBootVersion = '2.1.6.RELEASE'
    }
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${springIOVersion}"
        implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
        implementation 'com.alibaba:fastjson:1.2.56'
        compileOnly 'org.projectlombok:lombok:1.18.0'
        annotationProcessor 'org.projectlombok:lombok:1.18.0'
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    }
}
plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
}
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
group = 'com.me.springboot-starter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'*/

buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
        wrapperVersion = '1.0.21.RELEASE'
    }
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot.experimental:spring-boot-thin-gradle-plugin:${wrapperVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

    }

}

plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
}
repositories {
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    mavenLocal()
    mavenCentral()
}
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'org.springframework.boot'
apply plugin: 'org.springframework.boot.experimental.thin-launcher'
group = 'com.me.springboot-starter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

dependencies {
    implementation 'com.alibaba:fastjson:1.2.56'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.projectlombok:lombok:1.18.0'
    //annotationProcessor 'org.projectlombok:lombok:1.18.0'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}
publishing {
    publications {
        myPublish(MavenPublication){
            from components.java
        }
    }
}
task createPom {
    doLast {
        pom {
            withXml(dependencyManagement.pomConfigurer)
        }.writeTo("build/resources/main/META-INF/maven/${project.group}/${project.name}/pom.xml")
    }
}

jar.dependsOn = [createPom]
/*configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}*/






/*
bootJar {
    with copySpec {
        from "$buildDir/classes/com/me/springbootstarter"
        into 'com/me/springbootstarter'
    }
}*/
